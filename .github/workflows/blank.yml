



name: Terraform Apply Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform_apply:
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VERSION: 1.5.7
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ">= 1.5.7"

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Plan Terraform Changes
      - name: Terraform Plan
        id: terraform_plan
        run: |
          terraform plan -out=tfplan.out
          echo "::set-output name=plan_path::tfplan.out"

      # Save the plan output as an artifact
      - name: Save plan artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan
          path: ${{ steps.terraform_plan.outputs.plan_path }}

      # Request Approval
      - name: Request Approval
        id: approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.request('POST /repos/:owner/:repo/pulls/:pull_number/requested_reviewers', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: ['username1', 'username2'] // Add the GitHub usernames of the users who need to approve
            });
            console.log(response.data);
            
      # Wait for Approval
      - name: Wait for Approval
        id: wait-for-approval
        run: |
          sleep 10  # Wait for 10 seconds for reviewers to approve. Adjust as needed.
          APPROVED=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}/reviews | jq '.[] | select(.state=="APPROVED")' | wc -l)
          if [ $APPROVED -ge 2 ]; then
            echo "::set-output name=approved::true"
          else
            echo "::set-output name=approved::false"
          fi

  merge:
    needs: terraform_apply
    runs-on: ubuntu-latest
    if: ${{ needs.terraform_apply.outputs.approved == 'true' }}
    steps:
      - name: Download plan artifact
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan
          path: /tmp

      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@v3
        with:
          tf_actions_version: 0.14.4
          working-directory: /tmp
          args: apply -auto-approve tfplan.out
