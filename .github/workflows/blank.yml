name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VERSION: 1.5.7
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./"
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./"
         
    - name: 'Terraform Plan'
      id: plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./"

   # Save the plan output as an artifact
    - name: Save plan artifact
      uses: actions/upload-artifact@v2
      with:
          name: terraform-plan
          path: ${{ steps.plan.outputs.plan_directory }}

      # Request approval for Terraform plan
    - name: Request Approval
      id: approval
      uses: actions/github-script@v4
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.request('POST /repos/:owner/:repo/pulls/:pull_number/requested_reviewers', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: ['username1', 'username2'] // Add the GitHub usernames of the users who need to approve
            });
            console.log(response.data);

      # Wait for approval
    - name: Wait for Approval
      id: wait-for-approval
      run: |
          sleep 10  # Wait for 10 seconds for reviewers to approve. Adjust as needed.
          APPROVED=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}/reviews | jq '.[] | select(.state=="APPROVED")' | wc -l)
          if [ $APPROVED -ge 2 ]; then
            echo "::set-output name=approved::true"
          else
            echo "::set-output name=approved::false"
          fi

    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./"

      
